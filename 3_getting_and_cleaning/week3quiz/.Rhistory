library(swirl)
swirl()
libaray(swirl)
library(swirl)
swirl()
library(swirl)
swirl()
install.packages("rhdf5")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("rhdf5")
library(rhdf5)
BiocManager::install("rhdf5")
library(rhdf5)
setwd("~/Documents/DS_h/3_getting_and_cleaning/week3quiz")
gdp <- read.csv("gdp.csv", skip = 3, skipNul = TRUE,nrows = 192)
View(gdp)
View(gdp)
stats <- read.csv("cou.csv")
View(stats)
gdp_states <- unique(gdp$X)
is.na(gdp$X$1)
is.na(gdp$X)
?contans
?contains
stats <- read.csv("cou.csv", na.strings =c("","NA"))
stats
stats <- read.csv("cou.csv")
gdp <- read.csv("gdp.csv", na.strings =c("","NA"))
View(gdp)
gdp <- read.csv("gdp.csv", na.strings =c("","NA"),blank.lines.skip = TRUE)
View(gdp)
gdp <- read.csv("gdp.csv", na.strings =c("","NA"),blank.lines.skip = TRUE,skip = 3, nrows = 192)
gdp_states <- unique(gdp$X)
gdp_states
gdp_states <- gdp_states[!is.na(gdp_states)]
gdp_states
all_states<- states$CountryCode
all_states<- stats$CountryCode
library(dplyr)
?contains
gdp_states %>% all_states
gdp_states %in% all_states
sum(gdp_states %in% all_states)
arrange(gdp,"US.dollars.")
class(gdp$US.dollars.)
gdp$US.dollars.<- as.numeric(gdp$US.dollars.)
arrange(gdp,"US.dollars.")
View(gdp)
?as.numeric
gdp <- read.csv2("gdp.csv", na.strings =c("","NA"),blank.lines.skip = TRUE,skip = 3, nrows = 192)
gdp <- read.csv("gdp.csv", na.strings =c("","NA"),blank.lines.skip = TRUE,skip = 3, nrows = 192)
gdp[2,5]
as.numeric(gdp[2,5])
sub(",","1,234")
sub(",",x = "1,234")
sub(",",gdp[,5])
sub(",",gdp[,5],fixed =TRUE)
sub(",",".",gdp[,5],fixed =TRUE)
parse_number
library(dplyr)
library(readr)
install.packages("readr")
library(readr)
parse_number(gdp[2,5])
gdp[,5] <- parse_number(gdp[,5])
arrange(gdp,US.dollars.)
filter(stats, Incom.Group = "High income: OECD")
filter(stats, Incom.Group == "High income: OECD")
filter(stats, Incom.Group == "High income:OECD")
?filter
filter(stats, Income.Group == "High income:OECD")
filter(stats, Income.Group == "High income: OECD")
filter(stats, Income.Group == "High income: OECD")[1,]
filter(stats, Income.Group == "High income: OECD")[,1]
?select
hioecd <- filter(stats, Income.Group == "High income: OECD")[,1]
hinoecd <- filter(stats, Income.Group == "High income: nonOECD")[,1]
gdp[,1] %in% hioecd
mean(gdp[gdp[,1] %in% hioecd, 5])
mean(gdp[gdp[,1] %in% hioecd, 2])
mean(gdp[gdp[,1] %in% hinoecd, 2])
sapply(gdp[,1],function(x) stats[filter(stats,CountryCode == x),3])
lapply(gdp[,1],function(x) stats[filter(stats,CountryCode == x),3])
tapply(gdp[,1],function(x) stats[filter(stats,CountryCode == x),3])
class(gdp[,1])
attr(gdp[,1])
attributes(gdp[,1])
str(gdp[,1])
tapply(gdp[,1],function(x) as.character(stats[filter(stats,CountryCode == x),3]))
sapply(gdp[,1],function(x) as.character(stats[filter(stats,CountryCode == x),3]))
sapply(gdp[,1],function(x) stats[filter(stats,CountryCode == x),3])
sapply(gdp[,1],function(x) stats[stats$CountryCode == x),3])
sapply(gdp[,1],function(x) stats[stats$CountryCode == x,3])
gdp_new <- filter(gdp,l)
gdp_new <- filter(gdp,gdp$X %in% stats$CountryCode)
sapply(gdp_new[,1],function(x) stats[stats$CountryCode == x,3])
?mutate
group<-sapply(gdp_new[,1],function(x) stats[stats$CountryCode == x,3])
mutate(gdp_new, group = group)
install.packages("hmisc")
install.packages("Hmisc")
install.packages("isoband")
install.packages("ggplot2")
install.packages("Hmisc")
install.packages("ggplot2")
install.packages("Hmisc")
library(Hmisc)
cut2(gdp_new$Ranking, g= 5)
mutate(gdp_new, 5q = cut2(gdp_new$Ranking, g = 5))
mutate(gdp_new, 5q = cut2(gdp_new$Ranking, g = 5)))
mutate(gdp_new, 5q = cut2(Ranking, g = 5)))
mutate(gdp_new, 5q = cut2(Ranking, g = 5))
q5 <- cut2(gdp_new$Ranking, g= 5)
mutate(gdp_new, q5 = cut2(Ranking, g = 5))
gdp_new
gdp_new <- mutate(gdp_new, q5 = cut2(Ranking, g = 5))
mean(gdp[gdp[,1] %in% hioecd, 5])
mutate(gdp_new, group = group)
gdp_new <- mutate(gdp_new, group = group)
?xtab
?xtabs
head(gdp_new)
xtabs(q5 ~ group, data=gdp_new)
gdp_news <- mutate(gdp_new, q5s = as.character(q5))
gdp_news
xtabs(q5s ~ group, data=gdp_news)
filter(gdp_news, group == "Lower middle income")
?table
